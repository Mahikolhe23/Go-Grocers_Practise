[{"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\index.js":"1","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\store.js":"2","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\App.js":"3","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\productReducer.js":"4","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Footer.js":"5","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\categoryReducer.js":"6","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\cartReducer.js":"7","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\userReducers.js":"8","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Navigation.js":"9","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\addressReducer.js":"10","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\CartView.js":"11","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Employee\\EmployeeHomeScreen.js":"12","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\SignInScreen.js":"13","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\SignUpScreen.js":"14","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminHomeScreen.js":"15","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\EditProfileScreen.js":"16","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminDeleteEmployeeScreen.js":"17","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminViewEmployeeScreen.js":"18","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminStockReportScreen.js":"19","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Delivery\\DeliveryPickedOrderScreen.js":"20","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Delivery\\DeliveryHomeScreen.js":"21","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerAddressScreen.js":"22","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerEditScreen.js":"23","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerProductScreen.js":"24","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerAddAddressScreen.js":"25","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerHomeScreen.js":"26","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerOrderReviewScreen.js":"27","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerOrdersScreen.js":"28","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAllCategoriesScreen.js":"29","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Home\\AboutUsScreen.js":"30","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Home\\ContactUsScreen.js":"31","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\AddProductScreen.js":"32","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAllOrdersScreen.js":"33","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewProductsScreen.js":"34","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\AddCategoryScreen.js":"35","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\EditProductScreen.js":"36","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAssignedOrdersScreen.js":"37","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\categoryConstants.js":"38","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Header.js":"39","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\productConstants.js":"40","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\Url.js":"41","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\userConstants.js":"42","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Actions\\userActions.js":"43","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\carousel.js":"44","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\reportWebVitals.js":"45"},{"size":584,"mtime":1678476684731,"results":"46","hashOfConfig":"47"},{"size":1004,"mtime":1678352018801,"results":"48","hashOfConfig":"47"},{"size":4688,"mtime":1678273006778,"results":"49","hashOfConfig":"47"},{"size":246,"mtime":1678273006783,"results":"50","hashOfConfig":"47"},{"size":202,"mtime":1678360024771,"results":"51","hashOfConfig":"47"},{"size":474,"mtime":1678273006783,"results":"52","hashOfConfig":"47"},{"size":177,"mtime":1678342506051,"results":"53","hashOfConfig":"47"},{"size":1609,"mtime":1678273006783,"results":"54","hashOfConfig":"47"},{"size":12336,"mtime":1678474593939,"results":"55","hashOfConfig":"47"},{"size":185,"mtime":1678273006783,"results":"56","hashOfConfig":"47"},{"size":10484,"mtime":1678467396470,"results":"57","hashOfConfig":"47"},{"size":625,"mtime":1678468915641,"results":"58","hashOfConfig":"47"},{"size":2426,"mtime":1678454126154,"results":"59","hashOfConfig":"47"},{"size":6320,"mtime":1678475414906,"results":"60","hashOfConfig":"47"},{"size":649,"mtime":1678363797914,"results":"61","hashOfConfig":"47"},{"size":5046,"mtime":1678454014792,"results":"62","hashOfConfig":"47"},{"size":4722,"mtime":1678451044027,"results":"63","hashOfConfig":"47"},{"size":5158,"mtime":1678451699929,"results":"64","hashOfConfig":"47"},{"size":4224,"mtime":1678451524442,"results":"65","hashOfConfig":"47"},{"size":7620,"mtime":1678474366548,"results":"66","hashOfConfig":"47"},{"size":627,"mtime":1678468809720,"results":"67","hashOfConfig":"47"},{"size":4897,"mtime":1678452607626,"results":"68","hashOfConfig":"47"},{"size":4875,"mtime":1678343788484,"results":"69","hashOfConfig":"47"},{"size":10013,"mtime":1678468177484,"results":"70","hashOfConfig":"47"},{"size":4306,"mtime":1678273006786,"results":"71","hashOfConfig":"47"},{"size":4334,"mtime":1678465312351,"results":"72","hashOfConfig":"47"},{"size":12031,"mtime":1678467640920,"results":"73","hashOfConfig":"47"},{"size":5724,"mtime":1678467664488,"results":"74","hashOfConfig":"47"},{"size":5704,"mtime":1678451925384,"results":"75","hashOfConfig":"47"},{"size":3305,"mtime":1678453948772,"results":"76","hashOfConfig":"47"},{"size":4998,"mtime":1678453996790,"results":"77","hashOfConfig":"47"},{"size":6972,"mtime":1678451825954,"results":"78","hashOfConfig":"47"},{"size":5949,"mtime":1678467439453,"results":"79","hashOfConfig":"47"},{"size":7199,"mtime":1678475072654,"results":"80","hashOfConfig":"47"},{"size":2663,"mtime":1678273006784,"results":"81","hashOfConfig":"47"},{"size":7689,"mtime":1678451913761,"results":"82","hashOfConfig":"47"},{"size":6236,"mtime":1678467461586,"results":"83","hashOfConfig":"47"},{"size":106,"mtime":1678273006780,"results":"84","hashOfConfig":"47"},{"size":217,"mtime":1678273006780,"results":"85","hashOfConfig":"47"},{"size":42,"mtime":1678273006780,"results":"86","hashOfConfig":"47"},{"size":57,"mtime":1678363585156,"results":"87","hashOfConfig":"47"},{"size":713,"mtime":1678273006780,"results":"88","hashOfConfig":"47"},{"size":2693,"mtime":1678273006778,"results":"89","hashOfConfig":"47"},{"size":1020,"mtime":1678448695794,"results":"90","hashOfConfig":"47"},{"size":397,"mtime":1678477211678,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1jo5zg5",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"99"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"99"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"99"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"99"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"99"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"99"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"99"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\index.js",[],[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\store.js",[],[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\App.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\productReducer.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Footer.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\categoryReducer.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\cartReducer.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\userReducers.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Navigation.js",["247","248","249","250","251","252","253","254"],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Reducers\\addressReducer.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\CartView.js",["255"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddProduct from \"../Images/AddProduct.jpg\"\r\nimport {toast} from \"react-toastify\"\r\nimport { Link } from 'react-router-dom';\r\nimport { URL_PATH } from '../Constants/Url';\r\n\r\nconst CartView = (props) => {\r\n\r\n    let cart = useSelector(store => store.cart)\r\n\r\n    const url_cart_update = URL_PATH+\"/cart/update\"\r\n    const url_cart_remove = URL_PATH+\"/cart/delete\"\r\n\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    let [cartTotal, setCartTotal] = useState(0)\r\n    let [isUpdated, setIsUpdated] = useState(false)\r\n    let [isRemoved, setIsRemoved] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(cart.length>0){\r\n            let total=0\r\n            cart.forEach(item => {\r\n               total+=(item.quantity * item.selectedProduct.price)\r\n            });\r\n            setCartTotal(total)\r\n            setIsUpdated(false)\r\n            setIsRemoved(false)\r\n        }\r\n        else{\r\n            setCartTotal(0)\r\n        }   \r\n    }, [cart, isUpdated, isRemoved])\r\n\r\n    const onAdd = (cartItem) => {\r\n\r\n        if(cartItem.quantity < 5){\r\n            const body = {\r\n                \"cartId\" : cartItem.id,\r\n                \"quantity\": cartItem.quantity + 1\r\n            }\r\n    \r\n            axios.put(url_cart_update, body, header)\r\n            .then(response => {\r\n                let index = cart.findIndex( ({id}) => id===response.data.data.id )\r\n                cart[index] = response.data.data\r\n                dispatch({\r\n                    type: \"UPDATE_CART\",\r\n                    payload: cart\r\n                })\r\n                setIsUpdated(true)\r\n                if(response.data.status!==\"success\")\r\n                    toast.error(response.data.status, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n        }\r\n        else{\r\n            toast.warning(\"Max allowed quantity reached\", {autoClose: 1500, position: toast.POSITION.TOP_RIGHT})\r\n        }\r\n    }\r\n\r\n    const onReduce = (cartItem) => {\r\n        \r\n        if(cartItem.quantity === 1){\r\n            onRemoveFromCart(cartItem)\r\n        }\r\n\r\n        else{\r\n            const body = {\r\n                \"cartId\" : cartItem.id,\r\n                \"quantity\": cartItem.quantity - 1\r\n            }\r\n    \r\n            axios.put(url_cart_update, body, header)\r\n                .then(response => {\r\n                    let index = cart.findIndex( ({id}) => id===response.data.data.id )\r\n                    cart[index] = response.data.data\r\n                    dispatch({\r\n                        type: \"UPDATE_CART\",\r\n                        payload: cart\r\n                    })\r\n                    setIsUpdated(true)\r\n                    if(response.data.status!==\"success\")\r\n                        toast.error(response.data.status, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n                })\r\n        }\r\n    }\r\n\r\n    const onRemoveFromCart = (cartItem) => {\r\n        cart = cart.filter(item => item.id!==cartItem.id)\r\n        dispatch({\r\n            type: \"UPDATE_CART\",\r\n            payload: cart\r\n        })\r\n        axios.delete(url_cart_remove+\"/\"+cartItem.id, header)\r\n            .then(response => {\r\n                toast.warning(\"\"+response.data.data, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n                setIsRemoved(true)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }\r\n\r\n    const onCheckOut =() => {\r\n        if(cart.length>0){\r\n            return \"/order-review\"\r\n        }\r\n        return \"/customer-products\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"Cart overlay\" id=\"cartView\">\r\n            \r\n            <div className=\"full-height overlay-content\">\r\n                <div className=\"full-height row\">\r\n                    <div className=\"col-md-9 blank-space\" onClick={()=>{document.getElementById(\"cartView\").style.width = \"0%\";}}></div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                            <div className=\"container-fluid\">\r\n                                \r\n                                <div className=\"navbar-item cart-title\"> My Cart ({cart.length} items) </div>\r\n                                <span className=\"closeBtn\">\r\n                                    <svg onClick={()=>{document.getElementById(\"cartView\").style.width = \"0%\";}} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"white\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n                                    </svg>\r\n                                </span>\r\n                            </div>\r\n                        </nav>\r\n\r\n                        <div className=\"cart-area\">\r\n                            \r\n                            {\r\n                                cart.length>0 &&\r\n                                cart.map(item => {\r\n                                    \r\n                                    return(\r\n                                        <div className=\"cart-item\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-3\">\r\n                                                    <span className=\"vertical-aligner\"></span>\r\n                                                    {\r\n                                                                item.selectedProduct.imageName &&\r\n                                                                <img src={`Img` + `/${item.selectedProduct.imageName}`} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                            {\r\n                                                                !item.selectedProduct.imageName &&\r\n                                                                <img src={AddProduct} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                </div>\r\n                                                <div className=\"col-md-9\">\r\n                                                    <div className=\"cart-item-title fs-5\">{item.selectedProduct.name}</div>\r\n                                                    <div className=\"cart-item-body\">\r\n                                                        \r\n                                                        <svg onClick={()=>{onReduce(item)}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-dash-circle\" viewBox=\"0 0 16 16\">\r\n                                                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                                            <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\r\n                                                        </svg>\r\n\r\n                                                        <span className=\"NextBtn\">{item.quantity}</span>\r\n\r\n                                                        <svg onClick={()=>{onAdd(item)}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-circle NextBtn\" viewBox=\"0 0 16 16\">\r\n                                                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                                            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                                                        </svg>\r\n\r\n                                                        <span className=\"NextBtn\"> x </span> \r\n\r\n                                                        <span className=\"NextBtn\"> &#8377; {item.selectedProduct.price} </span>\r\n\r\n                                                        <span className=\"float-end\">Total : &#8377; {item.selectedProduct.price * item.quantity} </span>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>           \r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                !cart.length>0 &&\r\n                                <div>\r\n                                    <span className=\"vertical-aligner\"></span>\r\n                                    <h5 className=\"text-center\"> Cart is empty </h5>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"check-out text-center\">\r\n                          \r\n                            <Link className=\"btn btn-warning check-out-btn\" to={onCheckOut}>\r\n                                <div onClick={()=>{if(document.getElementById(\"cartView\")){document.getElementById(\"cartView\").style.width = \"0%\";}}}>\r\n                                    <span className=\"float-start\">Proceed to check out</span> \r\n                                    <span className=\"float-end\">&#8377; {cartTotal}</span>  \r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartView","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Employee\\EmployeeHomeScreen.js",["256","257"],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\SignInScreen.js",["258"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signin } from \"../../Actions/userActions\";\r\nimport Header from \"../../Components/Header\";\r\nimport {toast} from 'react-toastify'\r\n\r\nconst SignInScreen = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, response, error } = useSelector((store) => store.userSignIn);\r\n\r\n  const onSignIn = () => {\r\n    dispatch(signin(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response && response.status === \"success\") {\r\n      sessionStorage.setItem(\"Authorization\", \"Bearer \" + response.token);\r\n      if (response.data.role === \"ADMIN\") {       // role based login\r\n        props.history.push(\"/admin-home\");\r\n      } else if (response.data.role === \"EMPLOYEE\") {\r\n        props.history.push(\"/employee-home\");\r\n      } else if (response.data.role === \"CUSTOMER\") {\r\n        props.history.push(\"/customer-home\");\r\n      } else if (response.data.role === \"DELIVERY_PERSON\") {\r\n        props.history.push(\"/delivery-home\");\r\n      }\r\n    }\r\n    else if(error){\r\n      toast.error('Invalid Login Credentials. Try again!!',{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n    }\r\n  }, [loading, response, error]);\r\n\r\n  return (\r\n    <div className=\"Screen\">\r\n      <Header title=\"Login\" />\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Email Address</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"name@example.com\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Password</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"*******\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"float-end\">\r\n          <br/>\r\n          New around here? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <button onClick={onSignIn} className=\"btn btn-outline-info\">\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\SignUpScreen.js",["259"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signup } from \"../../Actions/userActions\";\r\nimport Header from \"../../Components/Header\";\r\nimport { USER_SIGNUP_RESET } from \"../../Constants/userConstants\";\r\n\r\nconst SignUpScreen = (props) => {\r\n\r\n    const [firstName,setFirstName] = useState(\"\");\r\n    const [lastName,setLastName] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [role,setRole] = useState(\"CUSTOMER\");\r\n    \r\n    const [fNameError,setFNameError] = useState(\"\")\r\n    const [emailError,setEmailError] = useState(\"\")\r\n    const [passwordError,setPasswordError] = useState(\"\")\r\n    const [roleError,setRoleError] = useState(\"\")\r\n\r\n    const {loading,response,error} = useSelector(store => store.userSignUp)\r\n    const userSignIn = useSelector(store => store.userSignIn)\r\n    const dispatch = useDispatch()\r\n    const onSignUp = () => {\r\n        if((role === \"CUSTOMER\" || role === \"\") && userSignIn.response &&userSignIn.response.data.role === \"ADMIN\")\r\n            setRoleError(\"Select a valid role\")\r\n        else\r\n            setRoleError(\"\")\r\n        \r\n        if(firstName.length<1)\r\n            setFNameError(\"First Name is mandatory\")\r\n        else\r\n            setFNameError(\"\")\r\n\r\n        if(!email.match(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"))\r\n            setEmailError(\"Enter a valid email\")\r\n        else\r\n            setEmailError(\"\")\r\n\r\n        if(password.length<1)\r\n            setPasswordError(\"Password is required\")\r\n        else\r\n            setPasswordError(\"\")\r\n\r\n        if(firstName.length>1 && password.length>1 && email.match(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\") && ((role===\"CUSTOMER\" && !userSignIn.response) || role===\"EMPLOYEE\" || role===\"DELIVERY_PERSON\"))\r\n            dispatch(signup(firstName,lastName,email,password,role))\r\n    }\r\n\r\n    useEffect(()=>{\r\n            if(response && response.status === \"success\"){\r\n                if(userSignIn.response && userSignIn.response.data.role ===\"ADMIN\")\r\n                    props.history.push(\"/employees\")\r\n                else\r\n                    props.history.push(\"/signin\")\r\n                    dispatch({\r\n                        type : USER_SIGNUP_RESET,\r\n                    })\r\n            }\r\n    },[loading,response,error])\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n                <div>\r\n                    <Header title=\"SignUp\"/>\r\n                    {\r\n                        error && error.status === \"error\" && <h5 className=\"text-danger text-center\">{error.message}</h5>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label className=\"form-label\">First Name</label>\r\n                                    <input required onChange={(e)=>{setFirstName(e.target.value)}} type=\"text\" className=\"form-control\"  placeholder=\"First Name\"></input>\r\n                                   <h6 className=\"text-danger text-center\">{fNameError}</h6>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label className=\"form-label\">Last Name</label>\r\n                                    <input onChange={(e)=>{setLastName(e.target.value)}} type=\"text\" className=\"form-control\"  placeholder=\"Last Name\" minLength=\"2\"></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Email address</label>\r\n                                <input required onChange={(e)=>{setEmail(e.target.value)}} type=\"email\" className=\"form-control\"  placeholder=\"name@example.com\"></input>\r\n                                <h6 className=\"text-danger text-center\">{emailError}</h6>\r\n                            </div>\r\n\r\n                           \r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Password</label>\r\n                                <input required onChange={(e)=>{setPassword(e.target.value)}} type=\"password\" className=\"form-control\"  placeholder=\"********\"></input>\r\n                                <h6 className=\"text-danger text-center\">{passwordError}</h6>\r\n                            </div>\r\n\r\n\r\n                            {\r\n                                userSignIn.response && userSignIn.response.data.role === \"ADMIN\" &&\r\n                                <div className=\"mb-3 col-md-3\">\r\n                                    <h5 className=\"form-label\">Role</h5>\r\n                                    <select className=\"form-select\" onChange={(e)=>{setRole(e.target.value.toUpperCase())}}>\r\n                                        <option disabled selected>-- Select </option>\r\n                                        <option >Employee</option>\r\n                                        <option >Delivery_person</option>\r\n                                    </select>\r\n                                    <h6 className=\"text-danger text-center\">{roleError}</h6>\r\n                                </div>\r\n                                \r\n                            }\r\n                            { \r\n                            !userSignIn.response && \r\n                            <div className=\"float-end\">\r\n                                <br/> Already a User? <Link to=\"/signin\">SignIn</Link>\r\n                            </div>\r\n                            }\r\n                            <div className=\"mb-3 float-start\">\r\n                                <button onClick={onSignUp} type=\"button\" className=\"btn btn-outline-primary\">Register</button>\r\n                            </div>\r\n              \r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default SignUpScreen;\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminHomeScreen.js",["260"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Header from \"../../Components/Header\";\r\nimport img from '../../Images/About.jpg';\r\nconst AdminHomeScreen = (props) => {\r\n  const userSignIn = useSelector((store) => store.userSignIn);\r\n  return (\r\n    <div className=\"Screen\">\r\n      {!userSignIn.response && <Header title=\"You are not logged in\" />}\r\n      {userSignIn.response && (\r\n        <Header title={\"Welcome \" + userSignIn.response.data.firstName} />\r\n        \r\n      )}\r\n      <img\r\n       src={img}\r\n       height=\"500px\"\r\n       width=\"1250px\"\r\n       />\r\n    </div>\r\n  );\r\n};\r\nexport default AdminHomeScreen;","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\User\\EditProfileScreen.js",["261"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editUser, signout } from \"../../Actions/userActions\";\r\nimport Header from \"../../Components/Header\";\r\nimport { USER_EDIT_RESET } from \"../../Constants/userConstants\";\r\nimport {toast} from 'react-toastify'\r\n\r\nconst EditProfileScreen = (props) => {\r\n    const userSignIn = useSelector(store => store.userSignIn)\r\n    let {id,firstName,lastName,email,password,phone,role} = userSignIn.response.data\r\n\r\n    let [firstName_o,setFirstName] = useState(\"\"+firstName);\r\n    let [lastName_o,setLastName] = useState(\"\"+lastName);\r\n    let [password_o,setPassword] = useState(\"\"+password);\r\n    let [phone_o,setPhone] = useState(\"\"+phone);\r\n    \r\n    const [fNameError,setFNameError] = useState(\"\")\r\n    const [passwordError,setPasswordError] = useState(\"\")\r\n\r\n    const {loading,response,error} = useSelector(store => store.editUser)\r\n    const dispatch = useDispatch()\r\n    const onEditUser = () => {        \r\n        if(firstName_o.length<1)\r\n            setFNameError(\"First Name is mandatory\")\r\n        else\r\n            setFNameError(\"\")\r\n\r\n        if(password_o.length<1)\r\n            setPasswordError(\"Password is required\")\r\n        else\r\n            setPasswordError(\"\")\r\n\r\n        if(firstName_o.length>1 && password_o.length>1)\r\n            dispatch(editUser(id,firstName_o,lastName_o,email,password_o,role,phone_o))\r\n    }\r\n\r\n    useEffect(()=>{\r\n            if(response && response.status === \"success\"){\r\n                    \r\n                    dispatch({\r\n                        type : USER_EDIT_RESET,\r\n                    })\r\n\r\n                    dispatch(signout())\r\n                    toast.success('Logging out for saving changes',{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n                    props.history.push(\"/signin\")\r\n            }\r\n            else if(error){\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            }\r\n    },[loading,response,error])\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n                <div>\r\n                    <Header title=\"Edit Profile\"/>\r\n                    {\r\n                        error && error.status === \"error\" && <h5 className=\"text-danger text-center\">{error.message}</h5>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label className=\"form-label\">First Name</label>\r\n                                    <input defaultValue={firstName_o} onChange={(e)=>{setFirstName(e.target.value)}} type=\"text\" className=\"form-control\"  placeholder=\"First Name\"></input>\r\n                                   <h6 className=\"text-danger text-center\">{fNameError}</h6>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label className=\"form-label\">Last Name</label>\r\n                                    <input defaultValue={lastName_o} onChange={(e)=>{setLastName(e.target.value)}} type=\"text\" className=\"form-control\"  placeholder=\"Last Name\" minLength=\"2\"></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Email address</label>\r\n                                <input readOnly defaultValue={email} type=\"email\" className=\"form-control\"  placeholder=\"name@example.com\"></input>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Password</label>\r\n                                <input defaultValue={password_o} onChange={(e)=>{setPassword(e.target.value)}} type=\"password\" className=\"form-control\"  placeholder=\"********\"></input>\r\n                                <h6 className=\"text-danger text-center\">{passwordError}</h6>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Phone</label>\r\n                                <input defaultValue={phone_o} onChange={(e)=>{setPhone(e.target.value)}} type=\"text\" className=\"form-control\"  placeholder=\"Phone \"></input>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3 float-start\">\r\n                                <button onClick={onEditUser} type=\"button\" className=\"btn btn-success\">Save</button>\r\n                            </div>\r\n              \r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default EditProfileScreen;","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminDeleteEmployeeScreen.js",["262"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from \"react-toastify\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst AdminDeleteEmployeeScreen = (props) => {\r\n    \r\n    const url_employee = URL_PATH+\"/user/employees\"\r\n    const url_delivery = URL_PATH+\"/user/delivery_persons\"\r\n    const url_delete = URL_PATH+\"/user/delete\"\r\n    const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        },\r\n      };\r\n\r\n    const [employeeList,setEmployeeList] = useState([])\r\n    const [deliveryList,setDeliveryList] = useState([])\r\n    let [isDeleted,setIsDeleted] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        setIsDeleted(false)\r\n        axios.get(url_employee,header)\r\n        .then((response)=>{\r\n            setEmployeeList(response.data.data)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    \r\n        axios.get(url_delivery,header)\r\n        .then((response)=>{\r\n            setDeliveryList(response.data.data)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    \r\n    },[isDeleted])\r\n\r\n    const deleteEmployee = (id) => {\r\n        axios.delete(url_delete+`/${id}`,header)\r\n        .then((response)=>{\r\n            toast.success(response.data.data,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            setIsDeleted(true)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"All Employees\"/>\r\n            <br/>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 Block\">\r\n                    <h6 className=\"text-center\">View Employees</h6>\r\n                    <hr/>\r\n                    <br/>\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <tbody>\r\n                            {\r\n                                employeeList && \r\n                                employeeList.map( employee=>{\r\n                                    return (\r\n                                        <tr>\r\n                                            <td className=\"text-left\"> {employee.id} </td>\r\n                                            <td className=\"text-left\"> {employee.firstName} </td>\r\n                                            <td className=\"text-left\"> {employee.email} </td>\r\n                                            <td className=\"text-left\"> {employee.phone || \"Not Provided\"} </td>\r\n                                            <td className=\"text-left\"><button className=\"btn btn-outline-danger\" onClick={()=>deleteEmployee(employee.id)}>Delete</button></td>\r\n                                        </tr>    \r\n                                        )\r\n                                    })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n                <div className=\"col-md-6\">\r\n                    <h6 className=\"text-center\">View Deliverers</h6>\r\n                    <hr/>\r\n                    <br/>\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <tbody>\r\n                            {\r\n                                deliveryList && \r\n                                deliveryList.map( delivery=>{\r\n                                    return (\r\n                                        <tr>\r\n                                            <td className=\"text-left\"> {delivery.id} </td>\r\n                                            <td className=\"text-left\"> {delivery.firstName} </td>\r\n                                            <td className=\"text-left\"> {delivery.email} </td>\r\n                                            <td className=\"text-left\"> {delivery.phone || \"Not Provided\"} </td>\r\n                                            <td className=\"text-left\"><button className=\"btn btn-outline-danger\" onClick={()=>deleteEmployee(delivery.id)}>Delete</button></td>\r\n                                        </tr>    \r\n                                        )\r\n                                    })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDeleteEmployeeScreen\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminViewEmployeeScreen.js",["263"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport { toast } from \"react-toastify\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst AdminViewEmployeeScreen = (props) => {\r\n\r\n    const userSignIn = useSelector(store => store.userSignIn)\r\n    const url_employee = URL_PATH + \"/user/employees\"\r\n    const url_delivery = URL_PATH + \"/user/delivery_persons\"\r\n\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": sessionStorage.getItem(\"Authorization\")\r\n        },\r\n    };\r\n\r\n    const [employeeList, setEmployeeList] = useState([])\r\n    const [deliveryList, setDeliveryList] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(url_employee, header)\r\n            .then((response) => {\r\n                setEmployeeList(response.data.data)\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error.message, { autoClose: 2000, position: toast.POSITION.TOP_RIGHT })\r\n            })\r\n\r\n        axios.get(url_delivery, header)\r\n            .then((response) => {\r\n                setDeliveryList(response.data.data)\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error.message, { autoClose: 2000, position: toast.POSITION.TOP_RIGHT })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            {\r\n                !userSignIn.response &&\r\n                <Header title=\"You are not logged in\" />\r\n            }\r\n            {\r\n                userSignIn.response &&\r\n                <div>\r\n                    <Header title=\"All Employees\" />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 Block\">\r\n                            <h6 className=\"text-center\">View Employees</h6>\r\n                            <hr />\r\n                            <br />\r\n                            <table className=\"table table-striped table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td className=\"text-left\"> Name </td>\r\n                                        <td className=\"text-left\">email </td>\r\n                                        <td className=\"text-left\">phone</td>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        employeeList && employeeList.map(employee => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td className=\"text-left\"> {employee.firstName} </td>\r\n                                                    <td className=\"text-left\"> {employee.email} </td>\r\n                                                    <td className=\"text-left\"> {employee.phone || \"Not Provided\"} </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <h6 className=\"text-center\">View Deliverers</h6>\r\n                            <hr />\r\n                            <br />\r\n                            <table className=\"table table-striped table-hover\">\r\n                            <thead>\r\n                                    <tr>\r\n                                        <td className=\"text-left\"> Name </td>\r\n                                        <td className=\"text-left\">email </td>\r\n                                        <td className=\"text-left\">phone</td>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    \r\n                                    {\r\n                                        deliveryList && deliveryList.map(delivery => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td className=\"text-left\"> {delivery.firstName} </td>\r\n                                                    <td className=\"text-left\"> {delivery.email} </td>\r\n                                                    <td className=\"text-left\"> {delivery.phone || \"Not Provided\"} </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminViewEmployeeScreen\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Admin\\AdminStockReportScreen.js",["264"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from \"react-toastify\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst AdminStockReportScreen = (props) => {\r\n\r\n    const url_cat_all = URL_PATH+\"/category/all\"\r\n    const url_stock = URL_PATH+\"/product/stock/category-report\"\r\n\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [productDetails, setProductDetails] = useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n        axios.get(url_cat_all, header)\r\n        .then(response => {\r\n            setCategoryList([]) \r\n            setCategoryList(response.data.data)\r\n            onSelectCategory(response.data.data[0].name)\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n\r\n    }, [])\r\n\r\n    const onSelectCategory = (categoryName) => {\r\n       \r\n        axios.get(url_stock+`/${categoryName}`, header)\r\n        .then(response => {\r\n            setProductDetails([])\r\n            setProductDetails(response.data.data)\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"Stock Report\" />            \r\n            <div className=\"mb-3 text-center\">\r\n                <strong className=\"fs-5 form-label\">Category : </strong>\r\n                {\r\n                    categoryList.length>0 &&\r\n                    <select className=\"nextBtn\" onChange={e => { onSelectCategory(e.target.value)} }>\r\n                        <option disabled selected>Select category</option>\r\n                        {\r\n                            categoryList.map(category =>{\r\n                                return(\r\n                                    <option>{category.name}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                       \r\n                    </select> \r\n                }\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <hr/>\r\n                    {\r\n                        !productDetails.length>0 && \r\n                        <h5 className=\"text-center\"> No products in this category</h5>\r\n                    }\r\n                    {\r\n                        productDetails.length>0 && \r\n                        <table className=\"table table-hover table-bordered\">\r\n                            <thead className=\"table-dark\">\r\n                                <tr>\r\n                                    <th className=\"text-center\">Product ID</th>\r\n                                    <th>Product Name</th>\r\n                                    <th className=\"text-center\">Product Stock</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                productDetails.length>0 &&\r\n                                productDetails.map(detail =>{\r\n                                    return (\r\n                                        <tr>\r\n                                            <td className=\"text-center\">{detail.product.id}</td>\r\n                                            <td>{detail.product.name}</td>\r\n                                            <td className=\"text-center\">{detail.stock.quantity}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                                    \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminStockReportScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Delivery\\DeliveryPickedOrderScreen.js",["265"],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Delivery\\DeliveryHomeScreen.js",["266","267"],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerAddressScreen.js",["268"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst CustomerAddressScreen = (props) => {\r\n    \r\n    const url_get_address = URL_PATH+\"/address/all\"\r\n    const url_del_address = URL_PATH+\"/address/delete\"\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [addressList,setAddressList] = useState([])\r\n    const [isDeleted,setIsDeleted] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.get(url_get_address,header)\r\n        .then((response)=>{\r\n            setAddressList([])\r\n            setAddressList(response.data.data)\r\n            setIsDeleted(false)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    },[isDeleted])\r\n\r\n    const onEdit = (address)=>{\r\n        dispatch({\r\n            type : \"EDIT_ADDRESS\",\r\n            payload : address,\r\n        })\r\n        props.history.push(\"/edit-address\")\r\n    }\r\n\r\n    const onDelete = (id,category)=> {\r\n        axios.delete(url_del_address+`/${id}`,header)\r\n        .then((response)=>{\r\n            toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n            setIsDeleted(true)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"Addresses\"/>\r\n            <div className=\"row\">\r\n                {\r\n                    addressList.length>0 &&   addressList.map(address=>{\r\n                        return (\r\n                            <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"card-title\"> <h4>{address.addressLine1}</h4> </div>\r\n                                            <div className=\"card-text\">\r\n                                                <h5>{address.addressLine2}</h5>\r\n                                                <span>{address.city}</span>\r\n                                                <span className=\"NextBtn fs-6\">-</span>\r\n                                                <span className=\"NextBtn\">{address.pinCode}</span>\r\n                                                <br/>\r\n                                                <span>{address.state}</span>\r\n                                                <br/>\r\n                                                <span>{address.country}</span>\r\n                                                <hr/>\r\n                                                <div>\r\n                                                    <button className=\"btn btn-info\" onClick={()=>{onEdit(address)}}>Edit</button>\r\n                                                    <button className=\"btn btn-outline-danger NextBtn\" onClick={()=>{onDelete(address.id)}}>Delete</button>\r\n                                                </div>\r\n                                        </div>        \r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                        )\r\n                    })\r\n                }\r\n                <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement addCard\" onClick={() => {props.history.push(\"/add-address\")}}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <div className=\"card-text fs-2\">\r\n                                <br/>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"56\" height=\"56\" fill=\"currentColor\" className=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                                </svg>\r\n                            </div>\r\n                            <br/><br/><hr/>\r\n                            <h3 className=\"text-center\">Add New Address</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\nexport default CustomerAddressScreen\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerEditScreen.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerProductScreen.js",["269","270"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport AddProduct from \"../../Images/AddProduct.jpg\"\r\nimport {toast} from 'react-toastify'\r\nimport { CATEGORY_LIST_FETCH, CATEGORY_SELECT } from '../../Constants/categoryConstants'\r\nimport { URL_PATH } from '../../Constants/Url'\r\nimport Scrolling from '../../Components/carousel'\r\n\r\nconst CustomerProductsScreen = (props) => {\r\n\r\n    let category = useSelector(store => store.selectedCategory)\r\n    const categories = useSelector(store => store.categories)\r\n    const cart = useSelector(store=>store.cart)\r\n    const userSignIn = useSelector(store=>store.userSignIn)\r\n    \r\n    const url_products = URL_PATH+\"/product/category\"\r\n    const url_cart_add = URL_PATH+\"/cart/add\"\r\n    const url_cart_fetch = URL_PATH+\"/cart/all\"\r\n    const url_cart_remove = URL_PATH+\"/cart/delete\"\r\n    const url_category = URL_PATH+\"/category/all\"\r\n    \r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n            \r\n        }\r\n    }\r\n\r\n    const [categoryList, setCategoryList] = useState(categories)\r\n    const [products, setProducts] = useState([])\r\n    const [isAdded, setIsAdded] = useState(false)\r\n    const [isFetched, setIsFetched] = useState(false)\r\n    const [isRemoved, setIsRemoved] = useState(false)\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(categories.length === 0){\r\n            axios.get(url_category,header)\r\n            .then((response)=>{\r\n                setCategoryList([])\r\n                setCategoryList(response.data.data)\r\n                dispatch({\r\n                type: CATEGORY_LIST_FETCH,\r\n                payload: response.data.data\r\n                })\r\n                fetchProducts(response.data.data[0].name)\r\n                dispatch({\r\n                  type : CATEGORY_SELECT,\r\n                  payload : response.data.data[0]  \r\n                })\r\n            })\r\n            .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n        }\r\n        \r\n        if(!isFetched && !category){\r\n            fetchProducts(categoryList[0].name)\r\n        }\r\n        if(!isFetched && category.name){\r\n            fetchProducts(category.name)\r\n        }\r\n        if(isAdded || isRemoved)\r\n        axios.get(url_cart_fetch,header)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type : \"UPDATE_CART\",\r\n                payload : response.data.data,\r\n            })\r\n            setIsAdded(false)\r\n            setIsRemoved(false)\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }, [isAdded,isRemoved])\r\n\r\n    const fetchProducts = (categoryName) => {\r\n        setIsFetched(true)\r\n        axios.get(url_products+`/${categoryName}`, header)\r\n            .then(response => {\r\n                setProducts(response.data.data)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }\r\n\r\n    const onSelectCategory = (category) => {\r\n        fetchProducts(category.name)\r\n        dispatch({\r\n            type:CATEGORY_SELECT,\r\n            payload:category\r\n        })\r\n    }\r\n    \r\n    const onAddToCart = (product) => {\r\n        if(!userSignIn.response){\r\n            toast.error(\"Please signin to continue...\",{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            props.history.push(\"/signin\")\r\n        }\r\n        else{\r\n            const body = {\r\n                \"productId\" : product.id,\r\n                \"quantity\" : 1\r\n            }\r\n            axios.post(url_cart_add,body,header)\r\n            .then(response => {\r\n                toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:1500})\r\n                setIsAdded(true)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n        }\r\n    }\r\n\r\n    const onRemoveFromCart = (product) => {\r\n        const cartItem = cart.filter(cartItem => cartItem.selectedProduct.id===product.id)[0];\r\n        axios.delete(url_cart_remove+\"/\"+cartItem.id, header)\r\n            .then(response => {\r\n                toast.error(\"\"+response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:1500})\r\n                setIsRemoved(true)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }\r\n\r\n    const getStatusClass = (status) => {\r\n        if(status === \"INACTIVE\")\r\n          return \" overlay\"\r\n        return \"\"\r\n      }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"Welcome\" />\r\n            \r\n            <div className=\"mb-3 text-center\">\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\"> \r\n                        <strong className=\"fs-3 form-label\"></strong>\r\n                        {\r\n                            categoryList.length>0 &&\r\n                            <div className=\"col-md-12\" >\r\n                                <table className=\"table table-hover table-bordered pallette\">\r\n                                    <tbody>\r\n                                        {\r\n                                            categoryList.map(category =>{\r\n                                                return(\r\n                                                    <tr className={getStatusClass(category.status)}>\r\n                                                        <td onClick = {() => { onSelectCategory(category)} } >\r\n                                                            <h6>{category.name}</h6>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div> \r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"row\">\r\n                        \r\n                            {\r\n                                \r\n                                products.length>0 &&\r\n                                products.map(product => {\r\n                                    let isFound = cart.filter(cartItem => cartItem.selectedProduct.id === product.id).length > 0\r\n                                    return(\r\n                                        <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body text-center\">\r\n                                                {\r\n                                                    product.imageName &&\r\n                                                    <img src={`Img` + `/${product.imageName}`} alt=\"product\" className=\"img-fluid productImage\"/>\r\n                                                }\r\n                                                {\r\n                                                    !product.imageName &&\r\n                                                    <img src={AddProduct} alt=\"product\" className=\"img-fluid productImage\"/>\r\n                                                }\r\n                                                    <div className=\"card-title\"> <h5>{product.name}</h5> </div>\r\n                                                    \r\n                                                    <div className=\"card-text\">\r\n                                                        <h5>{product.price} &#8377;</h5>\r\n                                                        <hr/>\r\n                                                        {\r\n                                                            isFound===true &&\r\n                                                                <button onClick={() => {onRemoveFromCart(product)}} className=\"btn btn-danger\">Remove from Cart</button>\r\n                                                        }\r\n                                                        {\r\n                                                            isFound===false &&\r\n                                                                <button onClick={() => {onAddToCart(product)}} className=\"btn btn-success\" >Add To Cart</button>\r\n                                                        }\r\n                                                        \r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                    )    \r\n                                })\r\n                           \r\n                            }\r\n                           </div>\r\n                           </div>\r\n                            {\r\n                                !products.length>0 &&\r\n                                <div >\r\n                                    <Scrolling />\r\n                                    <h4 className=\"text-center\">Please Login to proceed</h4>\r\n                                </div>\r\n                            }  \r\n                       \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerProductsScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerAddAddressScreen.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerHomeScreen.js",["271","272","273"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"../../Components/Header\";\r\nimport { CATEGORY_LIST_FETCH, CATEGORY_SELECT } from \"../../Constants/categoryConstants\";\r\nimport { toast } from \"react-toastify\"\r\nimport { URL_PATH } from \"../../Constants/Url\";\r\nimport img from '../../Images/About.jpg'\r\n \r\nconst CustomerHomeScreen = (props) => {\r\n  const userSignIn = useSelector((store) => store.userSignIn);\r\n  const url_category = URL_PATH + \"/category/all\"\r\n  const url_cart_fetch = URL_PATH + \"/cart/all\"\r\n\r\n  const header = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": sessionStorage.getItem(\"Authorization\")\r\n    },\r\n  };\r\n\r\n  const [categoryList, setCategoryList] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get(url_cart_fetch, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"UPDATE_CART\",\r\n          payload: response.data.data,\r\n        })\r\n      })\r\n      .catch(error => {\r\n        toast.error(error.message, { autoClose: 2000, position: toast.POSITION.TOP_RIGHT })\r\n      })\r\n\r\n    axios.get(url_category, header)\r\n      .then((response) => {\r\n        setCategoryList([])\r\n        setCategoryList(response.data.data)\r\n        dispatch({\r\n          type: CATEGORY_LIST_FETCH,\r\n          payload: response.data.data\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message, { autoClose: 2000, position: toast.POSITION.TOP_RIGHT })\r\n      })\r\n  }, [])\r\n\r\n  const onSelect = (category) => {\r\n    console.log(category)\r\n    if (category.status === \"ACTIVE\") {\r\n      console.log(category)\r\n      dispatch({\r\n        type: CATEGORY_SELECT,\r\n        payload: category,\r\n      })\r\n      props.history.push(\"/customer-products\")\r\n    }\r\n    else {\r\n      toast.error(\"Not selling \" + category.name + \" at the moment\", { autoClose: 2000, position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n  }\r\n\r\n  const getStatusClass = (status) => {\r\n    if (status === \"INACTIVE\")\r\n      return \" block-card\"\r\n    return \"\"\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"Screen\">\r\n        {\r\n          !userSignIn.response &&\r\n          <div>\r\n            <Header title=\"You are not logged in\" />\r\n            <img\r\n              src={img}\r\n              height=\"500px\"\r\n              width=\"1100px\"\r\n            />\r\n          </div>\r\n        }\r\n        {\r\n          userSignIn.response &&\r\n          <div>\r\n            <Header title={\"Welcome \" + userSignIn.response.data.firstName} />\r\n            <div className=\"row\">\r\n              {\r\n                categoryList.length > 0 && categoryList.map(detail => {\r\n                  return (\r\n                    <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement\">\r\n                      <div className={\"card\" + getStatusClass(detail.status)} onClick={() => { onSelect(detail) }}>\r\n                        <div className=\"card-body text-center\">\r\n\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-9\">\r\n                              <h5 className=\"cat-card-title\">\r\n                                {detail.name}\r\n\r\n                              </h5>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                              <span className=\"vertical-aligner\"></span>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-chevron-right NextBtn\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\" />\r\n                              </svg>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n              <img\r\n                src={img}\r\n                height=\"500px\"\r\n                width=\"1100px\"\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerHomeScreen;","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerOrderReviewScreen.js",[],["274"],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Customer\\CustomerOrdersScreen.js",["275","276"],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAllCategoriesScreen.js",["277"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from 'react-toastify'\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst ViewAllCategoriesScreen = (props) => {\r\n    const userSignIn = useSelector(store =>store.userSignIn)\r\n    \r\n    const url_category = URL_PATH+\"/category/all\"\r\n    const url_edit = URL_PATH+\"/category/edit\"\r\n    const url_delete = URL_PATH+\"/category/delete\"\r\n\r\n    const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        },\r\n    };\r\n\r\n    const [categoryList,setCategoryList] = useState([])\r\n    const [nameError,setNameError] = useState(\"\")\r\n    const [isEdited,setIsEdited] = useState(false)\r\n    const [isDeleted,setIsDeleted] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.get(url_category,header)\r\n        .then((response)=>{\r\n            setIsEdited(false)\r\n            setIsDeleted(false)\r\n            setCategoryList([])\r\n            setCategoryList(response.data.data)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    },[isEdited,isDeleted])\r\n\r\n    const onEdit = (category) =>{\r\n        if(category.name.length === 0 ){\r\n            setNameError(\"Category Name is required\")\r\n        }\r\n        else{\r\n            setNameError(\"\")\r\n            const {id,name,status} = category\r\n            const body ={id,name,status}\r\n            axios.put(url_edit,body,header)\r\n            .then((response)=>{\r\n                setIsEdited(true)\r\n                toast.success(name+\" edited successfully!\",{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n            })\r\n            .catch((error)=>{\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(url_delete+`/${id}`,header)\r\n        .then((response)=>{\r\n            setIsDeleted(true)\r\n            toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\"> \r\n            {\r\n                !userSignIn.response &&\r\n                    <Header title=\"You are not logged in\"/>\r\n            }\r\n            {\r\n                userSignIn.response &&\r\n                <div>\r\n                    <Header title=\"Categories\"/>\r\n                    <div className=\"row\">\r\n                        <div className=\"table-responsive table-body\">\r\n                            <table className=\"table table-striped table-hover text-center\">\r\n                                <tbody>\r\n                                    {\r\n                                        categoryList && categoryList.map(category => {\r\n                                            return(\r\n                                                <tr>\r\n                                                    <td>{category.id}</td>\r\n                                                    <td>\r\n                                                        <input type=\"text\" className=\"text-center\" defaultValue={category.name} onChange={(e)=> category.name=e.target.value}/>\r\n                                                        <h6 className=\"text-danger\">{nameError}</h6>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {    \r\n                                                            category.status === \"ACTIVE\" &&\r\n                                                            <select onChange={(e)=>{category.status=e.target.value}}>\r\n                                                                <option>ACTIVE</option>\r\n                                                                <option>INACTIVE</option>\r\n                                                            </select>\r\n                                                        }\r\n                                                        {    \r\n                                                            category.status === \"INACTIVE\" &&\r\n                                                            <select onChange={(e)=> {category.status=e.target.value}}>\r\n                                                                <option>INACTIVE</option>\r\n                                                                <option>ACTIVE</option>\r\n                                                            </select>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td><button onClick={() => onEdit(category)} className=\"btn btn-outline-success\">Save</button></td>\r\n                                                    <td><button onClick={()=> onDelete(category.id)} className=\"btn btn-outline-danger NextBtn\">Remove</button></td>\r\n                                                </tr>\r\n                                            ) \r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewAllCategoriesScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Home\\AboutUsScreen.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Home\\ContactUsScreen.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\AddProductScreen.js",["278"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport AddProduct from '../../Images/AddProduct.jpg'\r\nimport {toast} from 'react-toastify'\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst AddProductScreen = (props) => {\r\n    const userSignIn = useSelector(store =>store.userSignIn)\r\n\r\n    const url_category = URL_PATH+\"/category/all\"\r\n    const url_product_add = URL_PATH+\"/product/add-product\"\r\n\r\n    const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        },\r\n    };\r\n\r\n    const [categoryList,setCategoryList] = useState([])\r\n    const [productName,setProductName] = useState(\"\")\r\n    const [description,setDescription] = useState(\"\")\r\n    const [price,setPrice] = useState(\"\")\r\n    const [category,setCategory] = useState(\"\")\r\n    const [quantity,setQuantity] = useState(5)\r\n    const [imageFile,setImageFile] = useState(AddProduct)\r\n    const [image,setImage] = useState(null)\r\n    const onFileSelect =(file) => {\r\n        setImageFile(URL.createObjectURL(file))\r\n        setImage(file)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get(url_category,header)\r\n        .then((response)=>{\r\n            setCategoryList([])\r\n            setCategoryList(response.data.data)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    },[])\r\n\r\n    const onAddProduct = ()=>{\r\n        const productDTO ={\r\n            product : {\r\n                name : productName,\r\n                description,\r\n                price,\r\n                status : \"ACTIVE\"\r\n            },\r\n            category,\r\n            stock : {\r\n                quantity,\r\n            }\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append('productDto',JSON.stringify(productDTO))\r\n        formData.append('image',image)\r\n\r\n        axios.post(url_product_add,formData,header)\r\n        .then((response)=>{\r\n            toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n            props.history.push(\"/products\")\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            {\r\n                !userSignIn.response &&\r\n                    <Header title=\"You are not logged in\"/>\r\n            }\r\n            {\r\n                userSignIn.response &&\r\n                <div className=\"row\">\r\n                    <Header title=\"Add Product\"/>\r\n                    <div className=\"col-md-4 Block\">                    \r\n                        <div className=\"mb-3 productHolder text-center\">\r\n                            <span className=\"vertical-aligner\"></span>\r\n                            <img src={imageFile} className=\"img-thumbnail img-responsive img-fluid\" alt=\"imgae\"/>\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Add or Change Image</label>\r\n                            <input type=\"file\" className=\"form-control\" onChange={(e)=>onFileSelect(e.target.files[0])} multiple={false}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">                          \r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Product Name</label>\r\n                            <input onChange={(e)=> setProductName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Product Name\"></input>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Product Description</label>\r\n                            <textarea onChange={(e)=> setDescription(e.target.value)} className=\"form-control\" rows=\"3\" placeholder=\"Add Description of Product\"/>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Category: </label>\r\n                                    {\r\n                                        categoryList.length>0 &&\r\n                                        <select className=\"NextBtn\" onChange={(e)=> setCategory(e.target.value)}>\r\n                                            <option disabled selected>Select Category</option>\r\n                                            {\r\n                                                categoryList.map(category =>{\r\n                                                return(\r\n                                                    <option>{category.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <option>Other</option>\r\n                                        </select> \r\n                                    }\r\n                                    <input type=\"text\" className=\"NextBtn\" onChange={(e)=> setCategory(e.target.value)}placeholder=\"New Category\"/>  \r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Quantity: </label>\r\n                                    <input onChange={(e)=> setQuantity(e.target.value)} type=\"number\" className=\"NextBtn\" defaultValue={5}/>    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Price: </label>\r\n                                    <input onChange={(e)=> setPrice(e.target.value)} type=\"number\" className=\"NextBtn\" placeholder=\"Rs.125\" />\r\n                                </div>                            \r\n                \r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div className=\"mb-3\">\r\n                            <br/>\r\n                            <button onClick={onAddProduct} type=\"button\" className=\"btn btn-primary\" >Add Product</button>\r\n                            <button onClick={() => props.history.push(`/${userSignIn.response.data.role.toUpperCase()}-home`)} className=\"btn btn-danger NextBtn\"> Cancel </button>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProductScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAllOrdersScreen.js",["279","280"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from \"react-toastify\"\r\nimport AddProduct from \"../../Images/AddProduct.jpg\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst ViewAllOrdersScreen = (props) => {\r\n    const url_fetch_orders = URL_PATH+\"/order/all\"\r\n    const url_assign_order = URL_PATH+\"/order/update\"\r\n    const role = useSelector(store=>store.userSignIn.response.data.role)\r\n\r\n    const header = {\r\n        headers:{\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\": sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [isAssigned,setIsAssigned] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        axios.get(url_fetch_orders, header)\r\n        .then(response => {\r\n            setOrders([])\r\n            setIsAssigned(false)\r\n            if(role===\"EMPLOYEE\"){\r\n                setOrders(response.data.data.filter(item => item.order.orderStatus===\"PLACED\"))\r\n            }\r\n            else if(role===\"DELIVERY_PERSON\"){\r\n                setOrders(response.data.data.filter(item => item.order.orderStatus===\"READY\"))\r\n            }\r\n        })\r\n        .catch(error=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }, [isAssigned])\r\n\r\n    const onAssign = (orderId) => {\r\n        axios.patch(url_assign_order,{orderId},header)\r\n        .then(response => {\r\n            toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n            setIsAssigned(true)\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"All Orders\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-8\">\r\n                {\r\n                    orders.length>0 &&\r\n                    orders.map( orderInfo => {\r\n                        return(\r\n                            <div className=\"order-area\">\r\n                                <div className=\" order-top \">\r\n                                    <div className=\"row text-center\">\r\n                                        <div className=\"col-md-3\"> <strong> Order Date </strong> <br/> {orderInfo.order.orderDate.split(\"T\")[0]} | {orderInfo.order.orderDate.split(\"T\")[1].split(\".\")[0]}</div>\r\n                                        <div className=\"col-md-6\"> <strong> Address </strong> <br/> {orderInfo.order.deliveryAddress.addressLine2}</div>\r\n                                        <div className=\"col-md-3\"><button className=\"btn btn-info assign-btn\" onClick={()=>{onAssign(orderInfo.order.id)}}>Assign to self</button></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"order-details\">\r\n                                    {\r\n                                        orderInfo.orderDetails.map(detail => {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-4\">                       \r\n                                                        <div className=\"order-image text-center\">\r\n                                                            <span className=\"vertical-aligner\"></span>\r\n                                                            {\r\n                                                                detail.selectedProduct.imageName &&\r\n                                                                <img src={`Img` + `/${detail.selectedProduct.imageName}`} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                            {\r\n                                                                !detail.selectedProduct.imageName &&\r\n                                                                <img src={AddProduct} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <br/>\r\n                                                        <h5> {detail.selectedProduct.name} </h5>\r\n                                                        <p> {detail.selectedProduct.description} </p>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-2\">\r\n                                                        <br/><br/>\r\n                                                        <h6> Quantity: {detail.quantity} </h6>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <br/>\r\n                            </div>   \r\n                        )\r\n                    })\r\n                }   \r\n                {\r\n                    !orders.length>0 &&\r\n                    <h5 className=\"text-center\"><br/>No Orders Found.</h5>\r\n                }\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewAllOrdersScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewProductsScreen.js",["281","282"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport Header from '../../Components/Header'\r\nimport { PRODUCT_EDIT } from '../../Constants/productConstants'\r\nimport { URL_PATH } from '../../Constants/Url'\r\nimport AddProduct from \"../../Images/AddProduct.jpg\"\r\n\r\nconst ViewProductsScreen = (props) => {\r\n\r\n    const productDetail = useSelector(store => store.productDetail)\r\n    \r\n    const url_cat_all = URL_PATH+\"/category/all\"\r\n    const url_stock = URL_PATH+\"/product/stock/category-report\"\r\n    const url_delete = URL_PATH+\"/product/delete\"\r\n    const header = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    const [categoryList, setCategoryList] = useState([])\r\n    \r\n    const [productDetails, setProductDetails] = useState([])\r\n    let [isDeleted, setIsDeleted] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n        axios.get(url_cat_all, header)\r\n            .then(response => {\r\n                setCategoryList([]) //reset list to avoid bug while deleting\r\n                setCategoryList(response.data.data)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n            })\r\n\r\n        if(productDetail.category)\r\n            onSelectCategory(productDetail.category)\r\n\r\n    }, [isDeleted])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSelectCategory = (categoryName) => {\r\n       \r\n        axios.get(url_stock+`/${categoryName}`, header)\r\n            .then(response => {\r\n                setProductDetails([])\r\n                setProductDetails(response.data.data)\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }\r\n\r\n    const onEdit = (productDetail) => {\r\n        dispatch({\r\n            type: PRODUCT_EDIT,\r\n            payload: productDetail\r\n        })\r\n        props.history.push(\"/edit-product\")\r\n    }\r\n\r\n    const onDelete = (id, category) => {\r\n        axios.delete(url_delete+`/${id}`, header)\r\n            .then(response => {\r\n                setIsDeleted(true)\r\n                onSelectCategory(category)\r\n                toast.success(\"Product deleted successfully!\", {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message, {autoClose: 2000, position: toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"Products\" />\r\n            \r\n            <div className=\"mb-3 text-center\">\r\n                <strong className=\"fs-5 form-label\">Category : </strong>\r\n                {\r\n                    categoryList.length>0 &&\r\n                    <select className=\"NextBtn\" onChange={e => { onSelectCategory(e.target.value)} }>\r\n                        <option disabled selected>Select category</option>\r\n                        {\r\n                            categoryList.map(category =>{\r\n                                return(\r\n                                    <option>{category.name}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                       \r\n                    </select> \r\n                }\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {\r\n                    productDetails.length>0 &&\r\n                    productDetails.map(detail => {\r\n                        return(\r\n                            <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        {\r\n                                            detail.product.imageName!==null &&\r\n                                            <img src={`Img`+`/${detail.product.imageName}`} alt=\"productimage\" className=\"img-fluid productImage\"/>\r\n                                            \r\n                                        }\r\n                                        {\r\n                                            detail.product.imageName===null &&\r\n                                            <img src={AddProduct} alt=\"productimage\" className=\"img-fluid\"/>\r\n                                        }\r\n                                        \r\n                                        <div className=\"card-title\"> <h3>{detail.product.name}</h3> </div>\r\n                                        \r\n                                        <div className=\"card-text\">\r\n                                            <h5>Price : {detail.product.price} &#8377;</h5>\r\n                                            <hr/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-4 Block stockData\">Stock : {detail.stock.quantity} </div>\r\n                                                <div className=\"col-md-4 Block\"><button onClick={() => {onEdit(detail)}} className=\"btn btn-info\">Edit</button></div>\r\n                                                <div className=\"col-md-4\"><button onClick={() => {onDelete(detail.product.id, detail.category)}} className=\"btn btn-outline-danger\">Delete</button></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                        )\r\n                        \r\n                    })\r\n                }\r\n                \r\n                <div className=\"col-md-3 col-sm-6 col-xs-12 myCardElement addProductCard\" onClick={() => {props.history.push(\"/add-product\")}}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            <br/><br/>\r\n                            <div className=\"card-text fs-1\">\r\n                                <br/>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"56\" height=\"56\" fill=\"currentColor\" className=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                                </svg>\r\n                                \r\n                            </div>\r\n                            <br/><br/><br/><br/><hr/>\r\n                            <h3 className=\"text-center\">Add new Product</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ViewProductsScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\AddCategoryScreen.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\EditProductScreen.js",["283","284","285","286"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport AddProduct from '../../Images/AddProduct.jpg'\r\nimport {toast} from \"react-toastify\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\nconst EditProductScreen = (props) => {\r\n    const userSignIn = useSelector(store =>store.userSignIn)\r\n    const productDetail = useSelector(store =>store.productDetail)\r\n    \r\n    const url_category = URL_PATH+\"/category/all\"\r\n    const url_product_edit = URL_PATH+\"/product/edit\"\r\n    const url_image = \"http://127.0.0.1:8887/src/Images\"\r\n    const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : sessionStorage.getItem(\"Authorization\")\r\n        },\r\n    };\r\n\r\n    const [categoryList,setCategoryList] = useState([])\r\n    const [productName,setProductName] = useState(productDetail.product.name)\r\n    const [description,setDescription] = useState(productDetail.product.description)\r\n    const [price,setPrice] = useState(productDetail.product.price)\r\n    const [category,setCategory] = useState(productDetail.category)\r\n    const [quantity,setQuantity] = useState(productDetail.stock.quantity)\r\n    const [unit,setUnit] = useState(productDetail.stock.unit)\r\n    const [imageFile,setImageFile] = useState((productDetail.product.imageName && `Images` + `/${productDetail.product.imageName}` )|| AddProduct)\r\n    const [image,setImage] = useState(null)\r\n    \r\n    const onFileUpload =(file) => {\r\n        setImage(file)\r\n        setImageFile(URL.createObjectURL(file))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get(url_category,header)\r\n        .then((response)=>{\r\n            setCategoryList([])\r\n            setCategoryList(response.data.data)\r\n        })\r\n        .catch((error)=>{\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    },[])\r\n\r\n    const onEditProduct = ()=>{\r\n        const body ={\r\n            product : {\r\n                id : productDetail.product.id,\r\n                name : productName,\r\n                description,\r\n                price,\r\n                status : \"ACTIVE\",\r\n                imageName : productDetail.product.imageName\r\n            },\r\n            category,\r\n            stock : {\r\n                id : productDetail.product.id,\r\n                quantity,\r\n                unit\r\n            }\r\n        }\r\n\r\n        const formData = new FormData()\r\n        formData.append('productDto',JSON.stringify(body))\r\n        formData.append('image',image)\r\n\r\n        axios.put(url_product_edit,formData,header)\r\n        .then((response)=>{\r\n            props.history.push(\"/products\")\r\n            toast.success(response.data.data,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            {\r\n                !userSignIn.response &&\r\n                    <Header title=\"You are not logged in\"/>\r\n            }\r\n            {\r\n                userSignIn.response &&\r\n                <div className=\"row\">\r\n                    <Header title=\"Edit Product\"/>\r\n                    <div className=\"col-md-4 Block\">                        \r\n                        <div className=\"mb-3 productHolder text-center\">\r\n                            <span className=\"vertical-aligner\"></span>\r\n                            <img src={imageFile} alt=\"product\" className=\"img-fluid productImage\"/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Add or Change Image</label>\r\n                            <input type=\"file\" className=\"form-control\" onChange={(e)=>onFileUpload(e.target.files[0])} multiple={false}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">                          \r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Product Name</label>\r\n                            <input defaultValue={productDetail.product.name} onChange={(e)=> setProductName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Product Name\"></input>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Product Description</label>\r\n                            <textarea defaultValue={productDetail.product.description} onChange={(e)=> setDescription(e.target.value)} className=\"form-control\" rows=\"3\" placeholder=\"Add Description of Product\"/>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Category: </label>\r\n                                    {\r\n                                        categoryList.length>0 &&\r\n                                        <select className=\"NextBtn\" onChange={(e)=> setCategory(e.target.value)}>\r\n                                            <option disabled selected>Select Category</option>\r\n                                            {\r\n                                                categoryList.map(category =>{\r\n                                                return(\r\n                                                    <option>{category.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <option>Other</option>\r\n                                        </select> \r\n                                    }\r\n                                    <input type=\"text\" className=\"NextBtn\" onChange={(e)=> setCategory(e.target.value)}placeholder=\"New Category\"/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Quantity: </label>\r\n                                    <input defaultValue={productDetail.stock.quantity} onChange={(e)=> setQuantity(e.target.value)} type=\"number\" className=\"NextBtn\"/>    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-md-5\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Price: </label>\r\n                                    <input defaultValue={productDetail.product.price} onChange={(e)=> setPrice(e.target.value)} type=\"number\" className=\"NextBtn\" placeholder=\"Rs.125\" />\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div className=\"mb-3\">\r\n                            <br/>\r\n                            <button onClick={onEditProduct} type=\"button\" className=\"btn btn-success\" >Edit Product</button>\r\n                            <button onClick={() => props.history.push(\"/products\")} className=\"btn btn-danger NextBtn\"> Cancel </button>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProductScreen","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Screens\\Common\\ViewAssignedOrdersScreen.js",["287"],["288"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../../Components/Header'\r\nimport {toast} from \"react-toastify\"\r\nimport AddProduct from \"../../Images/AddProduct.jpg\"\r\nimport { URL_PATH } from '../../Constants/Url'\r\n\r\n\r\nconst ViewAssignedOrdersScreen = (props) => {\r\n\r\n    const url_fetch_orders = URL_PATH+\"/order/assigned\"\r\n    const url_change_status = URL_PATH+\"/order/update-status\"\r\n    const role = useSelector(store=>store.userSignIn.response.data.role)\r\n\r\n    const header = {\r\n        headers:{\r\n            \"Content-Type\" : \"application/json\",\r\n            \"Authorization\": sessionStorage.getItem(\"Authorization\")\r\n        }\r\n    }\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [isUpdated,setIsUpdated] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        axios.get(url_fetch_orders, header)\r\n            .then(response => {\r\n                setOrders([])\r\n                setIsUpdated(false)\r\n                if(role===\"EMPLOYEE\"){\r\n                    setOrders(response.data.data.filter(item => item.order.orderStatus===\"PACKING\"))\r\n                }\r\n                else if(role===\"DELIVERY_PERSON\"){\r\n                    setOrders(response.data.data.filter(item => item.order.orderStatus===\"OUT_FOR_DELIVERY\"))\r\n                }\r\n            })\r\n            .catch(error=>{\r\n                toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n            })\r\n    }, [isUpdated])\r\n\r\n\r\n    const onReady = (orderId) => {\r\n        axios.patch(url_change_status,{orderId,status:\"READY\"},header)\r\n        .then(response => {\r\n            toast.success(response.data.data,{position:toast.POSITION.TOP_RIGHT,autoClose:2000})\r\n            setIsUpdated(true)\r\n        })\r\n        .catch(error => {\r\n            toast.error(error.message,{autoClose:2000,position:toast.POSITION.TOP_RIGHT})\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Screen\">\r\n            <Header title=\"Assigned Orders\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-8\">\r\n                {\r\n                    orders.length>0 &&\r\n                    orders.map( orderInfo => {\r\n                        return(\r\n                            <div className=\"order-area\">\r\n                                <div className=\" order-top \">\r\n                                    <div className=\"row text-center\">\r\n                                        <div className=\"col-md-3\"> <strong> Order Date </strong> <br/> {orderInfo.order.orderDate.split(\"T\")[0]} | {orderInfo.order.orderDate.split(\"T\")[1].split(\".\")[0]}</div>\r\n                                        <div className=\"col-md-6\"><strong> Assigned On </strong><br/> {orderInfo.order.statusUpdateDate.split(\"T\")[0]} | {orderInfo.order.statusUpdateDate.split(\"T\")[1].split(\".\")[0]}</div>\r\n                                        <div className=\"col-md-3\"><button className=\"btn btn-outline-success assign-btn\" onClick={()=>{onReady(orderInfo.order.id)}}>Ready</button></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"order-details\">\r\n                                    {\r\n                                        orderInfo.orderDetails.map(detail => {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-4\">    \r\n                                                        <div className=\"order-image text-center\">\r\n                                                            <span className=\"vertical-aligner\"></span>\r\n                                                            {\r\n                                                                detail.selectedProduct.imageName &&\r\n                                                                <img src={`Img` + `/${detail.selectedProduct.imageName}`} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                            {\r\n                                                                !detail.selectedProduct.imageName &&\r\n                                                                <img src={AddProduct} alt=\"product\" className=\"img-fluid img-thumbnail\"/>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <br/>\r\n                                                        <h5> {detail.selectedProduct.name} </h5>\r\n                                                        <p> {detail.selectedProduct.description} </p>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-2\">\r\n                                                            <br/><br/>\r\n                                                            <h6> Quantity: {detail.quantity} </h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <br/>\r\n                            </div> \r\n                        )\r\n                    })\r\n                }   \r\n                {\r\n                    !orders.length>0 &&\r\n                    <h5 className=\"text-center\">\r\n                        <br/>\r\n                        No Orders Found.\r\n                    </h5>\r\n                }\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewAssignedOrdersScreen\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\categoryConstants.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\Header.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\productConstants.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\Url.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Constants\\userConstants.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Actions\\userActions.js",[],[],"E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\Components\\carousel.js",["289","290","291"],[],"import React from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport img1 from '../Images/About.jpg'\r\nimport img2 from '../Images/home1.jpg'\r\nimport img3 from '../Images/home4.jpg'\r\nclass Scrolling extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Carousel\r\n          showThumbs={false}\r\n          infiniteLoop={true}\r\n          autoPlay={true}\r\n          interval={5000}\r\n          showStatus={false}\r\n        >\r\n          <div >\r\n            <img\r\n            \r\n              src={img1}\r\n              height=\"600px\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              src={img2}\r\n              height=\"600px\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              src={img3}\r\n              height=\"600px\"\r\n            />\r\n          </div>\r\n        </Carousel>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrolling;\r\n","E:\\CDAC PROJECT\\CDAC-Project-Go-Grocers\\3_FrontEnd\\gogrocers\\src\\reportWebVitals.js",[],[],{"ruleId":"292","severity":1,"message":"293","line":52,"column":19,"nodeType":"294","endLine":52,"endColumn":150},{"ruleId":"292","severity":1,"message":"293","line":66,"column":19,"nodeType":"294","endLine":66,"endColumn":150},{"ruleId":"292","severity":1,"message":"293","line":77,"column":19,"nodeType":"294","endLine":77,"endColumn":150},{"ruleId":"292","severity":1,"message":"293","line":108,"column":29,"nodeType":"294","endLine":108,"endColumn":160},{"ruleId":"292","severity":1,"message":"293","line":117,"column":29,"nodeType":"294","endLine":117,"endColumn":160},{"ruleId":"292","severity":1,"message":"293","line":127,"column":29,"nodeType":"294","endLine":127,"endColumn":160},{"ruleId":"292","severity":1,"message":"293","line":152,"column":29,"nodeType":"294","endLine":152,"endColumn":160},{"ruleId":"292","severity":1,"message":"293","line":194,"column":29,"nodeType":"294","endLine":194,"endColumn":160},{"ruleId":"295","severity":1,"message":"296","line":160,"column":81,"nodeType":"297","messageId":"298","endLine":160,"endColumn":82},{"ruleId":"299","severity":1,"message":"300","line":13,"column":7,"nodeType":"294","endLine":17,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":14,"column":19,"nodeType":"297","messageId":"298","endLine":14,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":35,"column":6,"nodeType":"303","endLine":35,"endColumn":32,"suggestions":"304"},{"ruleId":"301","severity":1,"message":"305","line":59,"column":7,"nodeType":"303","endLine":59,"endColumn":31,"suggestions":"306"},{"ruleId":"299","severity":1,"message":"300","line":14,"column":7,"nodeType":"294","endLine":18,"endColumn":10},{"ruleId":"301","severity":1,"message":"307","line":51,"column":7,"nodeType":"303","endLine":51,"endColumn":31,"suggestions":"308"},{"ruleId":"301","severity":1,"message":"309","line":41,"column":7,"nodeType":"303","endLine":41,"endColumn":18,"suggestions":"310"},{"ruleId":"301","severity":1,"message":"309","line":40,"column":8,"nodeType":"303","endLine":40,"endColumn":10,"suggestions":"311"},{"ruleId":"301","severity":1,"message":"312","line":34,"column":8,"nodeType":"303","endLine":34,"endColumn":10,"suggestions":"313"},{"ruleId":"301","severity":1,"message":"314","line":36,"column":8,"nodeType":"303","endLine":36,"endColumn":19,"suggestions":"315"},{"ruleId":"299","severity":1,"message":"300","line":14,"column":7,"nodeType":"294","endLine":18,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":15,"column":19,"nodeType":"297","messageId":"298","endLine":15,"endColumn":20},{"ruleId":"301","severity":1,"message":"316","line":35,"column":7,"nodeType":"303","endLine":35,"endColumn":18,"suggestions":"317"},{"ruleId":"301","severity":1,"message":"318","line":80,"column":8,"nodeType":"303","endLine":80,"endColumn":27,"suggestions":"319"},{"ruleId":"295","severity":1,"message":"296","line":185,"column":69,"nodeType":"297","messageId":"298","endLine":185,"endColumn":70},{"ruleId":"301","severity":1,"message":"320","line":51,"column":6,"nodeType":"303","endLine":51,"endColumn":8,"suggestions":"321"},{"ruleId":"299","severity":1,"message":"300","line":81,"column":13,"nodeType":"294","endLine":85,"endColumn":15},{"ruleId":"299","severity":1,"message":"300","line":122,"column":15,"nodeType":"294","endLine":126,"endColumn":17},{"ruleId":"301","severity":1,"message":"316","line":38,"column":8,"nodeType":"303","endLine":38,"endColumn":10,"suggestions":"322","suppressions":"323"},{"ruleId":"301","severity":1,"message":"324","line":42,"column":8,"nodeType":"303","endLine":42,"endColumn":10,"suggestions":"325"},{"ruleId":"295","severity":1,"message":"296","line":74,"column":81,"nodeType":"297","messageId":"298","endLine":74,"endColumn":82},{"ruleId":"301","severity":1,"message":"326","line":38,"column":7,"nodeType":"303","endLine":38,"endColumn":27,"suggestions":"327"},{"ruleId":"301","severity":1,"message":"326","line":44,"column":7,"nodeType":"303","endLine":44,"endColumn":9,"suggestions":"328"},{"ruleId":"301","severity":1,"message":"314","line":39,"column":8,"nodeType":"303","endLine":39,"endColumn":20,"suggestions":"329"},{"ruleId":"295","severity":1,"message":"296","line":80,"column":81,"nodeType":"297","messageId":"298","endLine":80,"endColumn":82},{"ruleId":"301","severity":1,"message":"330","line":43,"column":8,"nodeType":"303","endLine":43,"endColumn":19,"suggestions":"331"},{"ruleId":"295","severity":1,"message":"296","line":112,"column":60,"nodeType":"297","messageId":"298","endLine":112,"endColumn":61},{"ruleId":"332","severity":1,"message":"333","line":15,"column":11,"nodeType":"334","messageId":"335","endLine":15,"endColumn":20},{"ruleId":"332","severity":1,"message":"336","line":29,"column":17,"nodeType":"334","messageId":"335","endLine":29,"endColumn":24},{"ruleId":"295","severity":1,"message":"296","line":30,"column":92,"nodeType":"297","messageId":"298","endLine":30,"endColumn":93},{"ruleId":"301","severity":1,"message":"326","line":47,"column":7,"nodeType":"303","endLine":47,"endColumn":9,"suggestions":"337"},{"ruleId":"295","severity":1,"message":"296","line":84,"column":81,"nodeType":"297","messageId":"298","endLine":84,"endColumn":82},{"ruleId":"301","severity":1,"message":"314","line":42,"column":8,"nodeType":"303","endLine":42,"endColumn":19,"suggestions":"338","suppressions":"339"},{"ruleId":"299","severity":1,"message":"300","line":19,"column":13,"nodeType":"294","endLine":23,"endColumn":15},{"ruleId":"299","severity":1,"message":"300","line":26,"column":13,"nodeType":"294","endLine":29,"endColumn":15},{"ruleId":"299","severity":1,"message":"300","line":32,"column":13,"nodeType":"294","endLine":35,"endColumn":15},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["340"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'userSignIn.response'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'header', 'url_delivery', and 'url_employee'. Either include them or remove the dependency array.",["343"],["344"],"React Hook useEffect has missing dependencies: 'header', 'onSelectCategory', and 'url_cat_all'. Either include them or remove the dependency array.",["345"],"React Hook useEffect has missing dependencies: 'header', 'role', and 'url_fetch_orders'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'header' and 'url_get_address'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'categories.length', 'category', 'categoryList', 'dispatch', 'fetchProducts', 'header', 'isFetched', 'url_cart_fetch', and 'url_category'. Either include them or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'dispatch', 'header', 'url_cart_fetch', and 'url_category'. Either include them or remove the dependency array.",["349"],["350"],["351"],"React Hook useEffect has missing dependencies: 'dispatch', 'header', 'url_cart_fetch', and 'url_fetch_orders'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'header' and 'url_category'. Either include them or remove the dependency array.",["353"],["354"],["355"],"React Hook useEffect has missing dependencies: 'header', 'onSelectCategory', 'productDetail.category', and 'url_cat_all'. Either include them or remove the dependency array.",["356"],"no-unused-vars","'url_image' is assigned a value but never used.","Identifier","unusedVar","'setUnit' is assigned a value but never used.",["357"],["358"],["359"],{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"kind":"382","justification":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"388","fix":"394"},{"desc":"372","fix":"395"},{"kind":"382","justification":"383"},"Update the dependencies array to be: [loading, response, error, props.history]",{"range":"396","text":"397"},"Update the dependencies array to be: [loading, response, error, userSignIn.response, props.history, dispatch]",{"range":"398","text":"399"},"Update the dependencies array to be: [loading, response, error, dispatch, props.history]",{"range":"400","text":"401"},"Update the dependencies array to be: [header, isDeleted, url_delivery, url_employee]",{"range":"402","text":"403"},"Update the dependencies array to be: [header, url_delivery, url_employee]",{"range":"404","text":"405"},"Update the dependencies array to be: [header, onSelectCategory, url_cat_all]",{"range":"406","text":"407"},"Update the dependencies array to be: [header, isUpdated, role, url_fetch_orders]",{"range":"408","text":"409"},"Update the dependencies array to be: [header, isDeleted, url_get_address]",{"range":"410","text":"411"},"Update the dependencies array to be: [categories.length, category, categoryList, dispatch, fetchProducts, header, isAdded, isFetched, isRemoved, url_cart_fetch, url_category]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, header, url_cart_fetch, url_category]",{"range":"414","text":"415"},"Update the dependencies array to be: [header, url_get_address]",{"range":"416","text":"417"},"directive","","Update the dependencies array to be: [dispatch, header, url_cart_fetch, url_fetch_orders]",{"range":"418","text":"419"},"Update the dependencies array to be: [isEdited, isDeleted, url_category, header]",{"range":"420","text":"421"},"Update the dependencies array to be: [header, url_category]",{"range":"422","text":"423"},"Update the dependencies array to be: [header, isAssigned, role, url_fetch_orders]",{"range":"424","text":"425"},"Update the dependencies array to be: [header, isDeleted, onSelectCategory, productDetail.category, url_cat_all]",{"range":"426","text":"427"},{"range":"428","text":"423"},{"range":"429","text":"409"},[1356,1382],"[loading, response, error, props.history]",[2386,2410],"[loading, response, error, userSignIn.response, props.history, dispatch]",[2028,2052],"[loading, response, error, dispatch, props.history]",[1370,1381],"[header, isDeleted, url_delivery, url_employee]",[1411,1413],"[header, url_delivery, url_employee]",[1066,1068],"[header, onSelectCategory, url_cat_all]",[1256,1267],"[header, isUpdated, role, url_fetch_orders]",[1150,1161],"[header, isDeleted, url_get_address]",[2913,2932],"[categories.length, category, categoryList, dispatch, fetchProducts, header, isAdded, isFetched, isRemoved, url_cart_fetch, url_category]",[1599,1601],"[dispatch, header, url_cart_fetch, url_category]",[1296,1298],"[header, url_get_address]",[1379,1381],"[dispatch, header, url_cart_fetch, url_fetch_orders]",[1304,1324],"[isEdited, isDeleted, url_category, header]",[1557,1559],"[header, url_category]",[1434,1446],"[header, isAssigned, role, url_fetch_orders]",[1528,1539],"[header, isDeleted, onSelectCategory, productDetail.category, url_cat_all]",[1965,1967],[1567,1578]]